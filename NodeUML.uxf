<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>170</y>
      <w>470</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>LinearNode&lt;Type&gt;
--

# LinearNode&lt;Type&gt; * : next

--
+ LinearNode():constructor
+ LinearNode(Type data) : constructor
+ LinearNode(Type data, LinearNode&lt;Type&gt; * next) : constructor

+ setNextNode(LinearNode&lt;Type&gt; *) : void
+ getNextNode() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>440</y>
      <w>230</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--

#data : Type

--
+Node() : constructor
+Node(Type data) : constructor
+getData() : Type
+setData(Type data) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>350</y>
      <w>70</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=public</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>190</x>
      <y>710</y>
      <w>300</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>/List&lt;Type&gt;/
--

#size : int

--
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ getFromIndex(int) : Type
+ remove(int) : Type
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>270</y>
      <w>80</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0</panel_attributes>
    <additional_attributes>10.0;440.0;10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>860</x>
      <y>140</y>
      <w>470</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>LinkedList&lt;Type&gt;
--

# front : LinearNode&lt;Type&gt; *
# end : LinearNode&lt;Type&gt; *

--
+ LinkedList():constructor
+ ~LinkedList() : destructor
+ add(Type item) : void
+ addAtIndx(int index, Type item) : void
+ remove(int index) : Type
+ getFromIndex(int index) : Type

+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>30</y>
      <w>290</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Stack&lt;Type&gt;
--

+ Stack() : constructor
+ ~Stack() : destructor

+push(Type) : void
+ pop() : Type
+ peek() : Type

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ remove(int index) : Type
+ getFromIndex(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>270</y>
      <w>290</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Queue&lt;Type&gt;
--

+ Queue() : constructor
+ ~Queue() : destructor

+ enqueue(Type) : void
+ dequeue() : Type
+ peek() : Type
+ clear() : void

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ remove(int index) : Type
+ getFromIndex(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>180</y>
      <w>110</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=public</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>300</y>
      <w>110</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=public</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>130</x>
      <y>140</y>
      <w>750</w>
      <h>670</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=public</panel_attributes>
    <additional_attributes>60.0;650.0;10.0;650.0;10.0;10.0;730.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>350</y>
      <w>680</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>660.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>250</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>60</y>
      <w>650</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>630.0;10.0;60.0;10.0;60.0;150.0;10.0;150.0</additional_attributes>
  </element>
</diagram>
